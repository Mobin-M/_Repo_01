## ## ## ## ## ## PLAN: 
Make an Console app, playing plotting analyzing sinusoids with one sinusoid existing at a time:
    - Getting only ONE sinusoid (frequency and Amplitude and phase)
    - playing it (continuous)
    - Refresh it when sinusoid properties changed even while playing.
    - Make the Plots:
      It can be easier for now to do the plots when finished playing
        - the sinusoid
        - Plot the frequency plot using both the understanding of the frequency existed and then using the Fourier transform (DFT/FFT)
        - Plot also spectogram as well for whole period (eventhough it is just one frequency)
    - Add a "parametric, modifiable, creative" ADSR to it. and re-Do all the above (specially spectogram to see if new freq pop up?) for the envelop. 
    - Plot the ADSR alone as well.
    



## ## ## ## ## DESIGN
Lets say user inputs a freq, amp, phi (throug typing and hitting enter):
 - this function should always be avaiable since the user should be able to change/modify the sinusoid whenever desired. (Note that at this stage it is about modifying NOT adding another frequency)
 - As a result/requirement, the other funciton, playing, should not be locking for this function
 - 
 

Lets play continuously the sinusoid:
    - **** How is it possible to use concurrent programming to have playing as a non blocking function for input function.
      Can it be by using Async, thread or Paralle execution
    - How to end the playing? Special keyboard interrupt?


Plot after one round of playing is done, meaning when playing is stopped/ended. maybe by a request from the user.
    - at this time it is ok that plotting blocks other activities, like user inputs
    - plot can be done either for a whole time of play or for a fraction on it.









## ## ## ## STATE OF PLAN 
- Understanding asynchronous programming used for concurrent programming
- Asynchio to make the final version of the console app
- Learn about ADSR and it's method









## ## ## next steps
* Adding another frequency to the existing one, (combining together) while still playing. Update the plots

* the input function can be replaced by assigning frequencoes to keyboard button.

* learn about harmonics and implement functionality to the software to add harmonics to the fundamental frequency. experimenting with new sounds

* how to generate different wave forms? sawtooth,...

* how it is to replicate a instrument (Analyze also Freesounds wav) and how to deviate from it

* Different effect to use on the sound and what else can be done. Reverb, filters, ...

* make an interface to work easier with these sounds

* make a sound using concept of perfect/exponential growth in mind (e) : maybe as a subset of ADSR (Amplitude of one sound) or increasing frequency 

* extending to Android NDK. Does it make sence? Better with C or C++?

* Does it make sense to move from python to Javascript framework?

* Make a GUI using PyQt5 with the same funcionality of the console app

 


